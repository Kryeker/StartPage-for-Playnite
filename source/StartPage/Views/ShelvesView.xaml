<UserControl x:Class="LandingPage.Views.ShelvesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LandingPage.Views"
             xmlns:lpvm="clr-namespace:LandingPage.ViewModels"
             xmlns:lpm="clr-namespace:LandingPage.Models"
             xmlns:lp="clr-namespace:LandingPage"
             xmlns:conv="clr-namespace:LandingPage.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:mu="clr-namespace:LandingPage.Markup"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:pn="clr-namespace:Playnite.SDK;assembly=Playnite.SDK" 
             xmlns:controls="clr-namespace:LandingPage.Controls" xmlns:system1="clr-namespace:System;assembly=System"
             xmlns:ext="clr-namespace:PlayniteCommon.Extensions;assembly=felixkmh.PlayniteCommon" 
             xmlns:numeric="http://gu.se/NumericInput"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type=lpvm:ShelvesViewModel}"
             Background="Transparent"
             x:Name="Shelves"
             >
    <UserControl.Resources>
        <system:Boolean x:Key="False">False</system:Boolean>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Int32 x:Key="Zero">0</system:Int32>
        <BitmapImage x:Key="InnerGlowBitmap" CreateOptions="IgnoreColorProfile" UriSource="pack://application:,,,/StartPagePlugin;component/innerglow.png" CacheOption="OnLoad"/>
        <Style x:Key="VirtualizedStackPanelStyle" TargetType="{x:Type VirtualizingStackPanel}">
            <Setter Property="UseLayoutRounding" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="False"/>
        </Style>
        <system:Double x:Key="CoverHeight">195</system:Double>
        <system:Double x:Key="CoverWidth">140</system:Double>
        <conv:MultiplyConverter x:Key="MultiplyConverter"/>
        <conv:ActualHeightToWidthConverter x:Key="ActualHeightToWidthConverter"/>
        <conv:HeightToWidthMultiConverter x:Key="HeightToWidthMultiConverter"/>
        <conv:WidthToHeightMultiConverter x:Key="WidthToHeightMultiConverter"/>
        <conv:ElementToScaledRectConverter x:Key="ElementToScaledRectConverter"/>
        <conv:UriToBitmapImageConverter x:Key="UriToBitmapImageConverter"/>
        <conv:UriToBitmapImageMultiConverter x:Key="UriToBitmapImageMultiConverter"/>
        <conv:VisibilityInverter x:Key="VisibilityInverter"/>
        <conv:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter"/>
        <conv:IEnumerableNullOrEmptyToVisibilityConverter x:Key="IEnumerableNullOrEmptyToVisibilityConverter"/>
        <conv:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter"/>
        <conv:ObjectToGroupHeaderConverter x:Key="ObjectToGroupHeaderConverter"/>
        <conv:DoubleToNegativeTopMarginConverter x:Key="DoubleToNegativeTopMarginConverter"/>
        <Style x:Key="GameGroupListStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
            <Setter Property="VirtualizingPanel.CacheLength" Value="5"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="MaxWidth" Value="1544"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="lp:ScrollViewerHelper.UseHorizontalScrolling" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style TargetType="Button" x:Key="CoverButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Margin="{TemplateBinding Padding}">
                            <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="GameCoverDataTemplate" DataType="{x:Type lpm:GameModel}">
            <StackPanel Orientation="Horizontal">
                <Grid>
                    <Grid ClipToBounds="True"
                          MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Path=DataContext.ShelveSettings.MaxCoverWidth}" 
                          x:Name="ImageGrid">
                        <Grid.Width>
                            <MultiBinding Converter="{StaticResource HeightToWidthMultiConverter}">
                                <MultiBinding.Bindings>
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" 
                                             Path="ActualHeight" 
                                             Mode="OneWay">
                                    </Binding>
                                    <mu:LandingPageSettings Path="Settings.CoverAspectRatio"/>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Grid.Width>
                        <Grid.MaxHeight>
                            <MultiBinding Converter="{StaticResource WidthToHeightMultiConverter}">
                                <MultiBinding.Bindings>
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" 
                                             Path="MaxWidth" 
                                             Mode="OneWay">
                                    </Binding>
                                    <mu:LandingPageSettings Path="Settings.CoverAspectRatio"/>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Grid.MaxHeight>
                        <Grid.OpacityMask>
                            <VisualBrush Stretch="None" AutoLayoutContent="True">
                                <VisualBrush.Visual>
                                    <Border Background="Black" CornerRadius="10" x:Name="Mask"
                                                            Width="{Binding ElementName=ImageGrid, Path=ActualWidth}"
                                                            Height="{Binding ElementName=ImageGrid, Path=ActualHeight}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Grid.OpacityMask>
                        <Image Stretch="UniformToFill" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Fant"
                               x:Name="CoverImage">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource UriToBitmapImageMultiConverter}"
                                              FallbackValue="{StaticResource DefaultGameCover}"
                                              TargetNullValue="{StaticResource DefaultGameCover}"
                                              Mode="OneWay">
                                    <MultiBinding.Bindings>
                                        <Binding Path="Game.CoverImage"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" Path="DataContext.ShelveSettings"/>
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Image.Source>
                        </Image>
                        <Image Source="{StaticResource InnerGlowBitmap}" Stretch="Fill" x:Name="GlowImage"
                                                RenderOptions.BitmapScalingMode="Fant" Opacity="0.0"/>
                        <TextBlock x:Name="NameTextBlock"
                                   Text="{Binding Game.Name}" 
                                   Style="{StaticResource BaseTextBlockStyle}" 
                                   VerticalAlignment="Bottom" 
                                   TextWrapping="Wrap" 
                                   TextAlignment="Center" 
                                   Padding="4" 
                                   Background="#7F000000"
                                   Visibility="Hidden"/>
                        <Viewbox x:Name="Buttons" Visibility="Hidden">
                            <StackPanel Orientation="Horizontal" Margin="1">
                                <Button Background="Transparent" Padding="7,5,4,5" x:Name="PlayButton" Click="PlayButton_Click" BorderThickness="0" Style="{StaticResource CoverButtonStyle}">
                                    <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}" x:Name="PlayIcon"/>
                                </Button>
                                <Button Background="Transparent"  Padding="4,5,7,5" x:Name="InfoButton" Click="InfoButton_Click" BorderThickness="0" Style="{StaticResource CoverButtonStyle}">
                                    <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                                </Button>
                            </StackPanel>
                        </Viewbox>
                    </Grid>
                    <Border Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.ShelveSettings.ShowNotInstalledIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border Margin="0" Padding="7" CornerRadius="10"
                                Visibility="{Binding Game.IsInstalled, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Border.Background>
                                <SolidColorBrush Color="Black" Opacity="0.4"/>
                            </Border.Background>
                            <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"
                                       Style="{DynamicResource BaseTextBlockStyle}"
                                       Foreground="White"/>
                        </Border>
                    </Border>
                    <Border Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.ShelveSettings.ShowInstalledIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border Margin="0" Padding="7" CornerRadius="10"
                                Visibility="{Binding Game.IsInstalled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Border.Background>
                                <SolidColorBrush Color="Black" Opacity="0.4"/>
                            </Border.Background>
                            <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"
                                       Style="{DynamicResource BaseTextBlockStyle}"
                                       Foreground="White"/>
                        </Border>
                    </Border>
                </Grid>
                
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Path=DataContext.ShelveSettings.ShowTitleOnCover}" Value="{StaticResource True}">
                    <Setter Property="Visibility" Value="Visible" TargetName="NameTextBlock"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CoverImage, Path=Source}" Value="{StaticResource DefaultGameCover}">
                    <Setter Property="Visibility" Value="Visible" TargetName="NameTextBlock"/>
                </DataTrigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsVisible" Value="True" SourceName="Proxy"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="IsOpen" Value="True" TargetName="Description"/>
                        --><!--<Setter Property="DataContext" TargetName="Description" Value="{Binding ., Mode=OneTime}"/>--><!--
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
                <Trigger Property="IsMouseOver" Value="True" SourceName="ImageGrid">
                    <Setter Property="Visibility" Value="Visible" TargetName="Buttons"/>
                </Trigger>
                <DataTrigger Binding="{Binding Game.IsLaunching}" Value="True">
                    <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="Flashing">
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation Duration="0:0:1" To="0.5" From="0" AutoReverse="True"
                                                 Storyboard.TargetName="GlowImage" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Flashing"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Game.IsRunning}" Value="True"/>
                        <!--<Condition Binding="{Binding ElementName=ImageGrid, Path=IsMouseOver}" Value="True"/>-->
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                        <Setter Property="Opacity" TargetName="GlowImage" Value="0.5"/>
                    </MultiDataTrigger.Setters>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0.5"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Game.IsInstalled}" Value="{StaticResource False}">
                    <Setter Property="Text" Value="" TargetName="PlayIcon"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="GameGroupBox" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition SharedSizeGroup="GroupHeaderSize"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Padding="5,0">
                                <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource NormalBrush}" Padding="0">
                                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"
                                                          RecognizesAccessKey="True" />
                                    </TextBlock>
                                </Border>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1"
                                              Margin="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" />
        <DataTemplate x:Key="GameDataTemplate" DataType="{x:Type lpm:GameGroup}">
            <GroupBox Header="{Binding Label}" Style="{DynamicResource GameGroupBox}">
                <ListBox ItemsSource="{Binding Games}" ItemContainerStyle="{DynamicResource GameListItem}"
                         BorderThickness="0" Background="Transparent" Padding="0"
                         ItemTemplate="{DynamicResource GameCoverDataTemplate}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ItemsPresenter}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="ItemsControl.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ContentPresenter Margin="0"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </GroupBox>
        </DataTemplate>
        <Style x:Key="GameListItem" TargetType="ListBoxItem">
            <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_MouseUp"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="7"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" x:Name="Scale"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GameGroupItem" TargetType="ListBoxItem">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <local:GameDetailsPopup IsOpen="{Binding ElementName=Shelves, Path=DataContext.ShowDetails}" PlacementTarget="{Binding ElementName=Shelves, Path=DataContext.PopupTarget}" DataContext="{Binding CurrentlyHoveredGameModel}"
                                Volume="{Binding DataContext.Shelves.TrailerVolume, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"/>
        <Button HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding AddShelveCommand}" Content="{DynamicResource LOC_SPG_AddShelve}"
                    Visibility="{Binding ElementName=ShelvesItemsControl, Path=IsVisible, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
        <Grid Background="Transparent" VerticalAlignment="Bottom">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{DynamicResource LOC_SPG_AddShelve}" Command="{Binding AddShelveCommand}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <ItemsControl ItemsSource="{Binding ShelveViewModels}" VerticalAlignment="Bottom" x:Name="ShelvesItemsControl" VerticalContentAlignment="Bottom"
                                      Grid.IsSharedSizeScope="True" HorizontalAlignment="Center"
                          Visibility="{Binding ShelveViewModels.Count, Converter={StaticResource InvertedObjectEqualityToVisibilityConverter}, ConverterParameter={StaticResource Zero}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1" VerticalAlignment="Bottom"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type lpvm:ShelveViewModel}">
                        <local:ShelveView x:Name="GamesListBox"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>
